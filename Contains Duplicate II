brute force approach-------------------------------------------------------
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        

        int s = nums.length; 
        for(int i = 0 ;i<s; i++){
            for(int j = i+1; j < s; j++){
                if(nums[i] == nums[j] && Math.abs(i-j) <=k){
                    return true;
                }
                if(Math.abs(i-j)> k){
                    break;
                }
            }
        }
        return false;
    }
}


using sliding window-----------------------------------------------------------------------------

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if (k == 0) return false;

        Set<Integer> slidingWindow = new HashSet<>();
        for (int index = 0; index < nums.length; index++) {
            if (slidingWindow.contains(nums[index]))
                return true;
            if (index >= k)
                slidingWindow.remove(nums[index - k]);
            slidingWindow.add(nums[index]);
        }
        return false;
    }
}
